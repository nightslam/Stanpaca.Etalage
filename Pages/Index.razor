@page "/"
@using Stanpaca.Etalage.Models
@inject HttpClient Http

<PageTitle>Stanpaca Etalage</PageTitle>

@if (_products == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    @if (_highlightProducts.Any())
    {
        <MudText Typo="Typo.h4" Class="mb-4">Uitgelichte producten</MudText>
        <MudGrid>
            @foreach (var product in _highlightProducts)
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="4" Class="rounded-lg" Style="border: 2px solid #FF9800;">
                        <MudCardMedia Image="@product.ImageUrl" Height="200" />
                        <MudCardContent>
                            <MudChip T="string" Color="Color.Warning" Size="Size.Small" Class="mb-2">Vaderdag</MudChip>
                            <MudText Typo="Typo.h6">@product.Title</MudText>
                            <MudText Typo="Typo.body2">@product.Description</MudText>
                            <MudText Typo="Typo.h6" Color="Color.Primary" Class="mt-2">€@product.Price.ToString("F2")</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }

    <MudText Typo="Typo.h4" Class="mt-6 mb-4">Alle producten</MudText>
    <MudGrid>
        @foreach (var product in _products)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard Elevation="2" Class="rounded-lg">
                    <MudCardMedia Image="@product.ImageUrl" Height="200" />
                    <MudCardContent>
                        @if (product.IsSold)
                        {
                            <MudChip T="string" Color="Color.Error" Size="Size.Small" Class="mb-2">Verkocht</MudChip>
                        }
                        <MudText Typo="Typo.h6">@product.Title</MudText>
                        <MudText Typo="Typo.body2">@product.Description</MudText>
                        <MudText Typo="Typo.h6" Color="Color.Primary" Class="mt-2">€@product.Price.ToString("F2")</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    private List<Product>? _products;
    private IEnumerable<Product> _highlightProducts => _products?.Where(p => p.IsHighlight) ?? Enumerable.Empty<Product>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _products = await Http.GetFromJsonAsync<List<Product>>("data/products.json");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading products: {ex.Message}");
        }
    }
} 